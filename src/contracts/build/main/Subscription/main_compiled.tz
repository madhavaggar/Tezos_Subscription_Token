parameter (or (pair %cancelSub (address %subscriber) (pair (address %publisher) (pair (address %tokenAddress) (pair (nat %tokenAmount) (pair (int %periodSeconds) (pair (nat %gasPrice) (pair (nat %nonce) (pair (signature %userSignature) (key %subs_pub_key))))))))) (pair %executeSubs (address %subscriber) (pair (address %publisher) (pair (address %tokenAddress) (pair (nat %tokenAmount) (pair (int %periodSeconds) (pair (nat %gasPrice) (pair (nat %nonce) (pair (signature %userSignature) (key %subs_pub_key))))))))));
storage   (pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))))))));
code
  {
    DUP;        # pair @parameter @storage : pair @parameter @storage
    CDR;        # @storage : pair @parameter @storage
    SWAP;       # pair @parameter @storage : @storage
    CAR;        # @parameter : @storage
    IF_LEFT
      {
        SWAP;       # @storage : @parameter%cancelSub
        # == cancelSub ==
        # sp.verify((~ self.data.reqToAddress.is_some()) | (self.data.reqToAddress.is_some() & (self.data.reqToAddress.open_some() == params.publisher))) # @storage : @parameter%cancelSub
        DUP;        # @storage : @storage : @parameter%cancelSub
        DUG 2;      # @storage : @parameter%cancelSub : @storage
        CDADR;      # option address : @parameter%cancelSub : @storage
        IF_SOME
          {
            DROP;       # @parameter%cancelSub : @storage
            SWAP;       # @storage : @parameter%cancelSub
            DUP;        # @storage : @storage : @parameter%cancelSub
            DUG 2;      # @storage : @parameter%cancelSub : @storage
            CDADR;      # option address : @parameter%cancelSub : @storage
            IF_SOME
              {
                DROP;       # @parameter%cancelSub : @storage
                DUP;        # @parameter%cancelSub : @parameter%cancelSub : @storage
                CDAR;       # address : @parameter%cancelSub : @storage
                DIG 2;      # @storage : address : @parameter%cancelSub
                DUP;        # @storage : @storage : address : @parameter%cancelSub
                DUG 3;      # @storage : address : @parameter%cancelSub : @storage
                CDADR;      # option address : address : @parameter%cancelSub : @storage
                IF_SOME
                  {}
                  {
                    PUSH int 154; # int : address : @parameter%cancelSub : @storage
                    FAILWITH;   # FAILED
                  }; # @some : address : @parameter%cancelSub : @storage
                COMPARE;    # int : @parameter%cancelSub : @storage
                EQ;         # bool : @parameter%cancelSub : @storage
              }
              {
                PUSH bool False; # bool : @parameter%cancelSub : @storage
              }; # bool : @parameter%cancelSub : @storage
          }
          {
            PUSH bool True; # bool : @parameter%cancelSub : @storage
          }; # bool : @parameter%cancelSub : @storage
        IF
          {}
          {
            PUSH string "WrongCondition: (~ self.data.reqToAddress.is_some()) | (self.data.reqToAddress.is_some() & (self.data.reqToAddress.open_some() == params.publisher))"; # string : @parameter%cancelSub : @storage
            FAILWITH;   # FAILED
          }; # @parameter%cancelSub : @storage
        SWAP;       # @storage : @parameter%cancelSub
        # sp.verify((~ self.data.reqTokenAddress.is_some()) | (self.data.reqTokenAddress.is_some() & (self.data.reqTokenAddress.open_some() == params.tokenAddress))) # @storage : @parameter%cancelSub
        DUP;        # @storage : @storage : @parameter%cancelSub
        DUG 2;      # @storage : @parameter%cancelSub : @storage
        CDDAR;      # option address : @parameter%cancelSub : @storage
        IF_SOME
          {
            DROP;       # @parameter%cancelSub : @storage
            SWAP;       # @storage : @parameter%cancelSub
            DUP;        # @storage : @storage : @parameter%cancelSub
            DUG 2;      # @storage : @parameter%cancelSub : @storage
            CDDAR;      # option address : @parameter%cancelSub : @storage
            IF_SOME
              {
                DROP;       # @parameter%cancelSub : @storage
                DUP;        # @parameter%cancelSub : @parameter%cancelSub : @storage
                CDDAR;      # address : @parameter%cancelSub : @storage
                DIG 2;      # @storage : address : @parameter%cancelSub
                DUP;        # @storage : @storage : address : @parameter%cancelSub
                DUG 3;      # @storage : address : @parameter%cancelSub : @storage
                CDDAR;      # option address : address : @parameter%cancelSub : @storage
                IF_SOME
                  {}
                  {
                    PUSH int 155; # int : address : @parameter%cancelSub : @storage
                    FAILWITH;   # FAILED
                  }; # @some : address : @parameter%cancelSub : @storage
                COMPARE;    # int : @parameter%cancelSub : @storage
                EQ;         # bool : @parameter%cancelSub : @storage
              }
              {
                PUSH bool False; # bool : @parameter%cancelSub : @storage
              }; # bool : @parameter%cancelSub : @storage
          }
          {
            PUSH bool True; # bool : @parameter%cancelSub : @storage
          }; # bool : @parameter%cancelSub : @storage
        IF
          {}
          {
            PUSH string "WrongCondition: (~ self.data.reqTokenAddress.is_some()) | (self.data.reqTokenAddress.is_some() & (self.data.reqTokenAddress.open_some() == params.tokenAddress))"; # string : @parameter%cancelSub : @storage
            FAILWITH;   # FAILED
          }; # @parameter%cancelSub : @storage
        SWAP;       # @storage : @parameter%cancelSub
        # sp.verify((~ self.data.reqTokenAmount.is_some()) | (self.data.reqTokenAmount.is_some() & (self.data.reqTokenAmount.open_some() == params.tokenAmount))) # @storage : @parameter%cancelSub
        DUP;        # @storage : @storage : @parameter%cancelSub
        DUG 2;      # @storage : @parameter%cancelSub : @storage
        CDDDAR;     # option nat : @parameter%cancelSub : @storage
        IF_SOME
          {
            DROP;       # @parameter%cancelSub : @storage
            SWAP;       # @storage : @parameter%cancelSub
            DUP;        # @storage : @storage : @parameter%cancelSub
            DUG 2;      # @storage : @parameter%cancelSub : @storage
            CDDDAR;     # option nat : @parameter%cancelSub : @storage
            IF_SOME
              {
                DROP;       # @parameter%cancelSub : @storage
                DUP;        # @parameter%cancelSub : @parameter%cancelSub : @storage
                CDDDAR;     # nat : @parameter%cancelSub : @storage
                DIG 2;      # @storage : nat : @parameter%cancelSub
                DUP;        # @storage : @storage : nat : @parameter%cancelSub
                DUG 3;      # @storage : nat : @parameter%cancelSub : @storage
                CDDDAR;     # option nat : nat : @parameter%cancelSub : @storage
                IF_SOME
                  {}
                  {
                    PUSH int 156; # int : nat : @parameter%cancelSub : @storage
                    FAILWITH;   # FAILED
                  }; # @some : nat : @parameter%cancelSub : @storage
                COMPARE;    # int : @parameter%cancelSub : @storage
                EQ;         # bool : @parameter%cancelSub : @storage
              }
              {
                PUSH bool False; # bool : @parameter%cancelSub : @storage
              }; # bool : @parameter%cancelSub : @storage
          }
          {
            PUSH bool True; # bool : @parameter%cancelSub : @storage
          }; # bool : @parameter%cancelSub : @storage
        IF
          {}
          {
            PUSH string "WrongCondition: (~ self.data.reqTokenAmount.is_some()) | (self.data.reqTokenAmount.is_some() & (self.data.reqTokenAmount.open_some() == params.tokenAmount))"; # string : @parameter%cancelSub : @storage
            FAILWITH;   # FAILED
          }; # @parameter%cancelSub : @storage
        SWAP;       # @storage : @parameter%cancelSub
        # sp.verify((~ self.data.reqPeriodSeconds.is_some()) | (self.data.reqPeriodSeconds.is_some() & (self.data.reqPeriodSeconds.open_some() == params.periodSeconds))) # @storage : @parameter%cancelSub
        DUP;        # @storage : @storage : @parameter%cancelSub
        DUG 2;      # @storage : @parameter%cancelSub : @storage
        CDAAR;      # option int : @parameter%cancelSub : @storage
        IF_SOME
          {
            DROP;       # @parameter%cancelSub : @storage
            SWAP;       # @storage : @parameter%cancelSub
            DUP;        # @storage : @storage : @parameter%cancelSub
            DUG 2;      # @storage : @parameter%cancelSub : @storage
            CDAAR;      # option int : @parameter%cancelSub : @storage
            IF_SOME
              {
                DROP;       # @parameter%cancelSub : @storage
                DUP;        # @parameter%cancelSub : @parameter%cancelSub : @storage
                CDDDDAR;    # int : @parameter%cancelSub : @storage
                DIG 2;      # @storage : int : @parameter%cancelSub
                DUP;        # @storage : @storage : int : @parameter%cancelSub
                DUG 3;      # @storage : int : @parameter%cancelSub : @storage
                CDAAR;      # option int : int : @parameter%cancelSub : @storage
                IF_SOME
                  {}
                  {
                    PUSH int 157; # int : int : @parameter%cancelSub : @storage
                    FAILWITH;   # FAILED
                  }; # @some : int : @parameter%cancelSub : @storage
                COMPARE;    # int : @parameter%cancelSub : @storage
                EQ;         # bool : @parameter%cancelSub : @storage
              }
              {
                PUSH bool False; # bool : @parameter%cancelSub : @storage
              }; # bool : @parameter%cancelSub : @storage
          }
          {
            PUSH bool True; # bool : @parameter%cancelSub : @storage
          }; # bool : @parameter%cancelSub : @storage
        IF
          {}
          {
            PUSH string "WrongCondition: (~ self.data.reqPeriodSeconds.is_some()) | (self.data.reqPeriodSeconds.is_some() & (self.data.reqPeriodSeconds.open_some() == params.periodSeconds))"; # string : @parameter%cancelSub : @storage
            FAILWITH;   # FAILED
          }; # @parameter%cancelSub : @storage
        SWAP;       # @storage : @parameter%cancelSub
        # sp.verify((~ self.data.reqGasPrice.is_some()) | (self.data.reqGasPrice.is_some() & (self.data.reqGasPrice.open_some() == params.gasPrice))) # @storage : @parameter%cancelSub
        DUP;        # @storage : @storage : @parameter%cancelSub
        DUG 2;      # @storage : @parameter%cancelSub : @storage
        CADDDR;     # option nat : @parameter%cancelSub : @storage
        IF_SOME
          {
            DROP;       # @parameter%cancelSub : @storage
            SWAP;       # @storage : @parameter%cancelSub
            DUP;        # @storage : @storage : @parameter%cancelSub
            DUG 2;      # @storage : @parameter%cancelSub : @storage
            CADDDR;     # option nat : @parameter%cancelSub : @storage
            IF_SOME
              {
                DROP;       # @parameter%cancelSub : @storage
                DUP;        # @parameter%cancelSub : @parameter%cancelSub : @storage
                CDDDDDAR;   # nat : @parameter%cancelSub : @storage
                DIG 2;      # @storage : nat : @parameter%cancelSub
                DUP;        # @storage : @storage : nat : @parameter%cancelSub
                DUG 3;      # @storage : nat : @parameter%cancelSub : @storage
                CADDDR;     # option nat : nat : @parameter%cancelSub : @storage
                IF_SOME
                  {}
                  {
                    PUSH int 158; # int : nat : @parameter%cancelSub : @storage
                    FAILWITH;   # FAILED
                  }; # @some : nat : @parameter%cancelSub : @storage
                COMPARE;    # int : @parameter%cancelSub : @storage
                EQ;         # bool : @parameter%cancelSub : @storage
              }
              {
                PUSH bool False; # bool : @parameter%cancelSub : @storage
              }; # bool : @parameter%cancelSub : @storage
          }
          {
            PUSH bool True; # bool : @parameter%cancelSub : @storage
          }; # bool : @parameter%cancelSub : @storage
        IF
          {}
          {
            PUSH string "WrongCondition: (~ self.data.reqGasPrice.is_some()) | (self.data.reqGasPrice.is_some() & (self.data.reqGasPrice.open_some() == params.gasPrice))"; # string : @parameter%cancelSub : @storage
            FAILWITH;   # FAILED
          }; # @parameter%cancelSub : @storage
        # elements = sp.local("elements", sp.pack(sp.record(a = params.subscriber, b = params.publisher, c = params.tokenAddress, d = params.tokenAmount, e = params.periodSeconds, f = params.gasPrice, g = params.nonce))) # @parameter%cancelSub : @storage
        DUP;        # @parameter%cancelSub : @parameter%cancelSub : @storage
        CDDDDDDAR;  # nat : @parameter%cancelSub : @storage
        SWAP;       # @parameter%cancelSub : nat : @storage
        DUP;        # @parameter%cancelSub : @parameter%cancelSub : nat : @storage
        DUG 2;      # @parameter%cancelSub : nat : @parameter%cancelSub : @storage
        CDDDDDAR;   # nat : nat : @parameter%cancelSub : @storage
        PAIR %f %g; # pair (nat %f) (nat %g) : @parameter%cancelSub : @storage
        SWAP;       # @parameter%cancelSub : pair (nat %f) (nat %g) : @storage
        DUP;        # @parameter%cancelSub : @parameter%cancelSub : pair (nat %f) (nat %g) : @storage
        CDDDDAR;    # int : @parameter%cancelSub : pair (nat %f) (nat %g) : @storage
        SWAP;       # @parameter%cancelSub : int : pair (nat %f) (nat %g) : @storage
        DUP;        # @parameter%cancelSub : @parameter%cancelSub : int : pair (nat %f) (nat %g) : @storage
        DUG 3;      # @parameter%cancelSub : int : pair (nat %f) (nat %g) : @parameter%cancelSub : @storage
        CDDDAR;     # nat : int : pair (nat %f) (nat %g) : @parameter%cancelSub : @storage
        PAIR %d %e; # pair (nat %d) (int %e) : pair (nat %f) (nat %g) : @parameter%cancelSub : @storage
        PAIR;       # pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @parameter%cancelSub : @storage
        SWAP;       # @parameter%cancelSub : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @storage
        DUP;        # @parameter%cancelSub : @parameter%cancelSub : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @storage
        CDDAR;      # address : @parameter%cancelSub : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @storage
        SWAP;       # @parameter%cancelSub : address : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @storage
        DUP;        # @parameter%cancelSub : @parameter%cancelSub : address : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @storage
        DUG 3;      # @parameter%cancelSub : address : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @parameter%cancelSub : @storage
        CDAR;       # address : address : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @parameter%cancelSub : @storage
        PAIR %b %c; # pair (address %b) (address %c) : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @parameter%cancelSub : @storage
        DIG 2;      # @parameter%cancelSub : pair (address %b) (address %c) : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @storage
        DUP;        # @parameter%cancelSub : @parameter%cancelSub : pair (address %b) (address %c) : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @storage
        DUG 3;      # @parameter%cancelSub : pair (address %b) (address %c) : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @parameter%cancelSub : @storage
        CAR;        # address : pair (address %b) (address %c) : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @parameter%cancelSub : @storage
        PAIR %a;    # pair (address %a) (pair (address %b) (address %c)) : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @parameter%cancelSub : @storage
        PAIR;       # pair (pair (address %a) (pair (address %b) (address %c))) (pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g))) : @parameter%cancelSub : @storage
        PACK;       # bytes : @parameter%cancelSub : @storage
        # sp.verify(sp.check_signature(params.subs_pub_key, params.userSignature, elements.value)) # bytes : @parameter%cancelSub : @storage
        DUP;        # bytes : bytes : @parameter%cancelSub : @storage
        DIG 2;      # @parameter%cancelSub : bytes : bytes : @storage
        DUP;        # @parameter%cancelSub : @parameter%cancelSub : bytes : bytes : @storage
        CDDDDDDDAR; # signature : @parameter%cancelSub : bytes : bytes : @storage
        SWAP;       # @parameter%cancelSub : signature : bytes : bytes : @storage
        DUP;        # @parameter%cancelSub : @parameter%cancelSub : signature : bytes : bytes : @storage
        DUG 4;      # @parameter%cancelSub : signature : bytes : bytes : @parameter%cancelSub : @storage
        CDDDDDDDDR; # key : signature : bytes : bytes : @parameter%cancelSub : @storage
        CHECK_SIGNATURE; # bool : bytes : @parameter%cancelSub : @storage
        IF
          {}
          {
            PUSH string "WrongCondition: sp.check_signature(params.subs_pub_key, params.userSignature, elements.value)"; # string : bytes : @parameter%cancelSub : @storage
            FAILWITH;   # FAILED
          }; # bytes : @parameter%cancelSub : @storage
        SWAP;       # @parameter%cancelSub : bytes : @storage
        # sp.verify(sp.sender == params.subscriber) # @parameter%cancelSub : bytes : @storage
        DUP;        # @parameter%cancelSub : @parameter%cancelSub : bytes : @storage
        DUG 2;      # @parameter%cancelSub : bytes : @parameter%cancelSub : @storage
        CAR;        # address : bytes : @parameter%cancelSub : @storage
        SENDER;     # address : address : bytes : @parameter%cancelSub : @storage
        COMPARE;    # int : bytes : @parameter%cancelSub : @storage
        EQ;         # bool : bytes : @parameter%cancelSub : @storage
        IF
          {
            SWAP;       # @parameter%cancelSub : bytes : @storage
            DROP;       # bytes : @storage
          }
          {
            PUSH string "WrongCondition: sp.sender == params.subscriber"; # string : bytes : @parameter%cancelSub : @storage
            FAILWITH;   # FAILED
          }; # bytes : @storage
        SWAP;       # @storage : bytes
        # self.data.times[elements.value].nextValidTimeStamp = sp.timestamp(-1) # @storage : bytes
        DUP;        # @storage : @storage : bytes
        CAR;        # pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : @storage : bytes
        SWAP;       # @storage : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes
        CDR;        # pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes
        DUP;        # pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))))) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes
        CAR;        # pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes
        SWAP;       # pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes
        CDR;        # pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes
        DUP;        # pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))))) : pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes
        CAR;        # option address : pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes
        SWAP;       # pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes
        CDR;        # pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes
        DUP;        # pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))) : pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes
        CAR;        # option nat : pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes
        SWAP;       # pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes
        CDR;        # big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes
        DUP;        # big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes
        DIG 6;      # bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
        DUP;        # bytes : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
        DUG 2;      # bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
        GET;        # option (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
        IF_SOME
          {}
          {
            PUSH int 248; # int : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
            FAILWITH;   # FAILED
          }; # @some : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
        DUP;        # @some : @some : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
        CAR;        # bool : @some : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
        SWAP;       # @some : bool : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
        CDDR;       # bool : bool : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
        PUSH timestamp "-1"; # timestamp : bool : bool : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
        PAIR;       # pair timestamp bool : bool : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
        SWAP;       # bool : pair timestamp bool : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
        PAIR;       # pair bool (pair timestamp bool) : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
        SOME;       # option (pair bool (pair timestamp bool)) : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
        SWAP;       # bytes : option (pair bool (pair timestamp bool)) : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
        UPDATE;     # big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
        SWAP;       # option nat : big_map bytes (pair bool (pair timestamp bool)) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
        PAIR;       # pair (option nat) (big_map bytes (pair bool (pair timestamp bool))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
        SWAP;       # option address : pair (option nat) (big_map bytes (pair bool (pair timestamp bool))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
        PAIR;       # pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
        SWAP;       # pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
        PAIR;       # pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))
        SWAP;       # pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))
        PAIR;       # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        NIL operation; # list operation : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
      }
      {
        SWAP;       # @storage : @parameter%executeSubs
        # == executeSubs ==
        # sp.verify((~ self.data.reqToAddress.is_some()) | (self.data.reqToAddress.is_some() & (self.data.reqToAddress.open_some() == params.publisher))) # @storage : @parameter%executeSubs
        DUP;        # @storage : @storage : @parameter%executeSubs
        DUG 2;      # @storage : @parameter%executeSubs : @storage
        CDADR;      # option address : @parameter%executeSubs : @storage
        IF_SOME
          {
            DROP;       # @parameter%executeSubs : @storage
            SWAP;       # @storage : @parameter%executeSubs
            DUP;        # @storage : @storage : @parameter%executeSubs
            DUG 2;      # @storage : @parameter%executeSubs : @storage
            CDADR;      # option address : @parameter%executeSubs : @storage
            IF_SOME
              {
                DROP;       # @parameter%executeSubs : @storage
                DUP;        # @parameter%executeSubs : @parameter%executeSubs : @storage
                CDAR;       # address : @parameter%executeSubs : @storage
                DIG 2;      # @storage : address : @parameter%executeSubs
                DUP;        # @storage : @storage : address : @parameter%executeSubs
                DUG 3;      # @storage : address : @parameter%executeSubs : @storage
                CDADR;      # option address : address : @parameter%executeSubs : @storage
                IF_SOME
                  {}
                  {
                    PUSH int 154; # int : address : @parameter%executeSubs : @storage
                    FAILWITH;   # FAILED
                  }; # @some : address : @parameter%executeSubs : @storage
                COMPARE;    # int : @parameter%executeSubs : @storage
                EQ;         # bool : @parameter%executeSubs : @storage
              }
              {
                PUSH bool False; # bool : @parameter%executeSubs : @storage
              }; # bool : @parameter%executeSubs : @storage
          }
          {
            PUSH bool True; # bool : @parameter%executeSubs : @storage
          }; # bool : @parameter%executeSubs : @storage
        IF
          {}
          {
            PUSH string "WrongCondition: (~ self.data.reqToAddress.is_some()) | (self.data.reqToAddress.is_some() & (self.data.reqToAddress.open_some() == params.publisher))"; # string : @parameter%executeSubs : @storage
            FAILWITH;   # FAILED
          }; # @parameter%executeSubs : @storage
        SWAP;       # @storage : @parameter%executeSubs
        # sp.verify((~ self.data.reqTokenAddress.is_some()) | (self.data.reqTokenAddress.is_some() & (self.data.reqTokenAddress.open_some() == params.tokenAddress))) # @storage : @parameter%executeSubs
        DUP;        # @storage : @storage : @parameter%executeSubs
        DUG 2;      # @storage : @parameter%executeSubs : @storage
        CDDAR;      # option address : @parameter%executeSubs : @storage
        IF_SOME
          {
            DROP;       # @parameter%executeSubs : @storage
            SWAP;       # @storage : @parameter%executeSubs
            DUP;        # @storage : @storage : @parameter%executeSubs
            DUG 2;      # @storage : @parameter%executeSubs : @storage
            CDDAR;      # option address : @parameter%executeSubs : @storage
            IF_SOME
              {
                DROP;       # @parameter%executeSubs : @storage
                DUP;        # @parameter%executeSubs : @parameter%executeSubs : @storage
                CDDAR;      # address : @parameter%executeSubs : @storage
                DIG 2;      # @storage : address : @parameter%executeSubs
                DUP;        # @storage : @storage : address : @parameter%executeSubs
                DUG 3;      # @storage : address : @parameter%executeSubs : @storage
                CDDAR;      # option address : address : @parameter%executeSubs : @storage
                IF_SOME
                  {}
                  {
                    PUSH int 155; # int : address : @parameter%executeSubs : @storage
                    FAILWITH;   # FAILED
                  }; # @some : address : @parameter%executeSubs : @storage
                COMPARE;    # int : @parameter%executeSubs : @storage
                EQ;         # bool : @parameter%executeSubs : @storage
              }
              {
                PUSH bool False; # bool : @parameter%executeSubs : @storage
              }; # bool : @parameter%executeSubs : @storage
          }
          {
            PUSH bool True; # bool : @parameter%executeSubs : @storage
          }; # bool : @parameter%executeSubs : @storage
        IF
          {}
          {
            PUSH string "WrongCondition: (~ self.data.reqTokenAddress.is_some()) | (self.data.reqTokenAddress.is_some() & (self.data.reqTokenAddress.open_some() == params.tokenAddress))"; # string : @parameter%executeSubs : @storage
            FAILWITH;   # FAILED
          }; # @parameter%executeSubs : @storage
        SWAP;       # @storage : @parameter%executeSubs
        # sp.verify((~ self.data.reqTokenAmount.is_some()) | (self.data.reqTokenAmount.is_some() & (self.data.reqTokenAmount.open_some() == params.tokenAmount))) # @storage : @parameter%executeSubs
        DUP;        # @storage : @storage : @parameter%executeSubs
        DUG 2;      # @storage : @parameter%executeSubs : @storage
        CDDDAR;     # option nat : @parameter%executeSubs : @storage
        IF_SOME
          {
            DROP;       # @parameter%executeSubs : @storage
            SWAP;       # @storage : @parameter%executeSubs
            DUP;        # @storage : @storage : @parameter%executeSubs
            DUG 2;      # @storage : @parameter%executeSubs : @storage
            CDDDAR;     # option nat : @parameter%executeSubs : @storage
            IF_SOME
              {
                DROP;       # @parameter%executeSubs : @storage
                DUP;        # @parameter%executeSubs : @parameter%executeSubs : @storage
                CDDDAR;     # nat : @parameter%executeSubs : @storage
                DIG 2;      # @storage : nat : @parameter%executeSubs
                DUP;        # @storage : @storage : nat : @parameter%executeSubs
                DUG 3;      # @storage : nat : @parameter%executeSubs : @storage
                CDDDAR;     # option nat : nat : @parameter%executeSubs : @storage
                IF_SOME
                  {}
                  {
                    PUSH int 156; # int : nat : @parameter%executeSubs : @storage
                    FAILWITH;   # FAILED
                  }; # @some : nat : @parameter%executeSubs : @storage
                COMPARE;    # int : @parameter%executeSubs : @storage
                EQ;         # bool : @parameter%executeSubs : @storage
              }
              {
                PUSH bool False; # bool : @parameter%executeSubs : @storage
              }; # bool : @parameter%executeSubs : @storage
          }
          {
            PUSH bool True; # bool : @parameter%executeSubs : @storage
          }; # bool : @parameter%executeSubs : @storage
        IF
          {}
          {
            PUSH string "WrongCondition: (~ self.data.reqTokenAmount.is_some()) | (self.data.reqTokenAmount.is_some() & (self.data.reqTokenAmount.open_some() == params.tokenAmount))"; # string : @parameter%executeSubs : @storage
            FAILWITH;   # FAILED
          }; # @parameter%executeSubs : @storage
        SWAP;       # @storage : @parameter%executeSubs
        # sp.verify((~ self.data.reqPeriodSeconds.is_some()) | (self.data.reqPeriodSeconds.is_some() & (self.data.reqPeriodSeconds.open_some() == params.periodSeconds))) # @storage : @parameter%executeSubs
        DUP;        # @storage : @storage : @parameter%executeSubs
        DUG 2;      # @storage : @parameter%executeSubs : @storage
        CDAAR;      # option int : @parameter%executeSubs : @storage
        IF_SOME
          {
            DROP;       # @parameter%executeSubs : @storage
            SWAP;       # @storage : @parameter%executeSubs
            DUP;        # @storage : @storage : @parameter%executeSubs
            DUG 2;      # @storage : @parameter%executeSubs : @storage
            CDAAR;      # option int : @parameter%executeSubs : @storage
            IF_SOME
              {
                DROP;       # @parameter%executeSubs : @storage
                DUP;        # @parameter%executeSubs : @parameter%executeSubs : @storage
                CDDDDAR;    # int : @parameter%executeSubs : @storage
                DIG 2;      # @storage : int : @parameter%executeSubs
                DUP;        # @storage : @storage : int : @parameter%executeSubs
                DUG 3;      # @storage : int : @parameter%executeSubs : @storage
                CDAAR;      # option int : int : @parameter%executeSubs : @storage
                IF_SOME
                  {}
                  {
                    PUSH int 157; # int : int : @parameter%executeSubs : @storage
                    FAILWITH;   # FAILED
                  }; # @some : int : @parameter%executeSubs : @storage
                COMPARE;    # int : @parameter%executeSubs : @storage
                EQ;         # bool : @parameter%executeSubs : @storage
              }
              {
                PUSH bool False; # bool : @parameter%executeSubs : @storage
              }; # bool : @parameter%executeSubs : @storage
          }
          {
            PUSH bool True; # bool : @parameter%executeSubs : @storage
          }; # bool : @parameter%executeSubs : @storage
        IF
          {}
          {
            PUSH string "WrongCondition: (~ self.data.reqPeriodSeconds.is_some()) | (self.data.reqPeriodSeconds.is_some() & (self.data.reqPeriodSeconds.open_some() == params.periodSeconds))"; # string : @parameter%executeSubs : @storage
            FAILWITH;   # FAILED
          }; # @parameter%executeSubs : @storage
        SWAP;       # @storage : @parameter%executeSubs
        # sp.verify((~ self.data.reqGasPrice.is_some()) | (self.data.reqGasPrice.is_some() & (self.data.reqGasPrice.open_some() == params.gasPrice))) # @storage : @parameter%executeSubs
        DUP;        # @storage : @storage : @parameter%executeSubs
        DUG 2;      # @storage : @parameter%executeSubs : @storage
        CADDDR;     # option nat : @parameter%executeSubs : @storage
        IF_SOME
          {
            DROP;       # @parameter%executeSubs : @storage
            SWAP;       # @storage : @parameter%executeSubs
            DUP;        # @storage : @storage : @parameter%executeSubs
            DUG 2;      # @storage : @parameter%executeSubs : @storage
            CADDDR;     # option nat : @parameter%executeSubs : @storage
            IF_SOME
              {
                DROP;       # @parameter%executeSubs : @storage
                DUP;        # @parameter%executeSubs : @parameter%executeSubs : @storage
                CDDDDDAR;   # nat : @parameter%executeSubs : @storage
                DIG 2;      # @storage : nat : @parameter%executeSubs
                DUP;        # @storage : @storage : nat : @parameter%executeSubs
                DUG 3;      # @storage : nat : @parameter%executeSubs : @storage
                CADDDR;     # option nat : nat : @parameter%executeSubs : @storage
                IF_SOME
                  {}
                  {
                    PUSH int 158; # int : nat : @parameter%executeSubs : @storage
                    FAILWITH;   # FAILED
                  }; # @some : nat : @parameter%executeSubs : @storage
                COMPARE;    # int : @parameter%executeSubs : @storage
                EQ;         # bool : @parameter%executeSubs : @storage
              }
              {
                PUSH bool False; # bool : @parameter%executeSubs : @storage
              }; # bool : @parameter%executeSubs : @storage
          }
          {
            PUSH bool True; # bool : @parameter%executeSubs : @storage
          }; # bool : @parameter%executeSubs : @storage
        IF
          {}
          {
            PUSH string "WrongCondition: (~ self.data.reqGasPrice.is_some()) | (self.data.reqGasPrice.is_some() & (self.data.reqGasPrice.open_some() == params.gasPrice))"; # string : @parameter%executeSubs : @storage
            FAILWITH;   # FAILED
          }; # @parameter%executeSubs : @storage
        # elements = sp.local("elements", sp.pack(sp.record(a = params.subscriber, b = params.publisher, c = params.tokenAddress, d = params.tokenAmount, e = params.periodSeconds, f = params.gasPrice, g = params.nonce))) # @parameter%executeSubs : @storage
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : @storage
        CDDDDDDAR;  # nat : @parameter%executeSubs : @storage
        SWAP;       # @parameter%executeSubs : nat : @storage
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : nat : @storage
        DUG 2;      # @parameter%executeSubs : nat : @parameter%executeSubs : @storage
        CDDDDDAR;   # nat : nat : @parameter%executeSubs : @storage
        PAIR %f %g; # pair (nat %f) (nat %g) : @parameter%executeSubs : @storage
        SWAP;       # @parameter%executeSubs : pair (nat %f) (nat %g) : @storage
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : pair (nat %f) (nat %g) : @storage
        CDDDDAR;    # int : @parameter%executeSubs : pair (nat %f) (nat %g) : @storage
        SWAP;       # @parameter%executeSubs : int : pair (nat %f) (nat %g) : @storage
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : int : pair (nat %f) (nat %g) : @storage
        DUG 3;      # @parameter%executeSubs : int : pair (nat %f) (nat %g) : @parameter%executeSubs : @storage
        CDDDAR;     # nat : int : pair (nat %f) (nat %g) : @parameter%executeSubs : @storage
        PAIR %d %e; # pair (nat %d) (int %e) : pair (nat %f) (nat %g) : @parameter%executeSubs : @storage
        PAIR;       # pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @parameter%executeSubs : @storage
        SWAP;       # @parameter%executeSubs : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @storage
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @storage
        CDDAR;      # address : @parameter%executeSubs : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @storage
        SWAP;       # @parameter%executeSubs : address : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @storage
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : address : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @storage
        DUG 3;      # @parameter%executeSubs : address : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @parameter%executeSubs : @storage
        CDAR;       # address : address : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @parameter%executeSubs : @storage
        PAIR %b %c; # pair (address %b) (address %c) : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @parameter%executeSubs : @storage
        DIG 2;      # @parameter%executeSubs : pair (address %b) (address %c) : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @storage
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : pair (address %b) (address %c) : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @storage
        DUG 3;      # @parameter%executeSubs : pair (address %b) (address %c) : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @parameter%executeSubs : @storage
        CAR;        # address : pair (address %b) (address %c) : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @parameter%executeSubs : @storage
        PAIR %a;    # pair (address %a) (pair (address %b) (address %c)) : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : @parameter%executeSubs : @storage
        PAIR;       # pair (pair (address %a) (pair (address %b) (address %c))) (pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g))) : @parameter%executeSubs : @storage
        PACK;       # bytes : @parameter%executeSubs : @storage
        # sp.verify((~ self.data.reqToAddress.is_some()) | (self.data.reqToAddress.is_some() & (self.data.reqToAddress.open_some() == params.publisher))) # bytes : @parameter%executeSubs : @storage
        DIG 2;      # @storage : bytes : @parameter%executeSubs
        DUP;        # @storage : @storage : bytes : @parameter%executeSubs
        DUG 3;      # @storage : bytes : @parameter%executeSubs : @storage
        CDADR;      # option address : bytes : @parameter%executeSubs : @storage
        IF_SOME
          {
            DROP;       # bytes : @parameter%executeSubs : @storage
            DIG 2;      # @storage : bytes : @parameter%executeSubs
            DUP;        # @storage : @storage : bytes : @parameter%executeSubs
            DUG 3;      # @storage : bytes : @parameter%executeSubs : @storage
            CDADR;      # option address : bytes : @parameter%executeSubs : @storage
            IF_SOME
              {
                DROP;       # bytes : @parameter%executeSubs : @storage
                SWAP;       # @parameter%executeSubs : bytes : @storage
                DUP;        # @parameter%executeSubs : @parameter%executeSubs : bytes : @storage
                DUG 2;      # @parameter%executeSubs : bytes : @parameter%executeSubs : @storage
                CDAR;       # address : bytes : @parameter%executeSubs : @storage
                DIG 3;      # @storage : address : bytes : @parameter%executeSubs
                DUP;        # @storage : @storage : address : bytes : @parameter%executeSubs
                DUG 4;      # @storage : address : bytes : @parameter%executeSubs : @storage
                CDADR;      # option address : address : bytes : @parameter%executeSubs : @storage
                IF_SOME
                  {}
                  {
                    PUSH int 154; # int : address : bytes : @parameter%executeSubs : @storage
                    FAILWITH;   # FAILED
                  }; # @some : address : bytes : @parameter%executeSubs : @storage
                COMPARE;    # int : bytes : @parameter%executeSubs : @storage
                EQ;         # bool : bytes : @parameter%executeSubs : @storage
              }
              {
                PUSH bool False; # bool : bytes : @parameter%executeSubs : @storage
              }; # bool : bytes : @parameter%executeSubs : @storage
          }
          {
            PUSH bool True; # bool : bytes : @parameter%executeSubs : @storage
          }; # bool : bytes : @parameter%executeSubs : @storage
        IF
          {}
          {
            PUSH string "WrongCondition: (~ self.data.reqToAddress.is_some()) | (self.data.reqToAddress.is_some() & (self.data.reqToAddress.open_some() == params.publisher))"; # string : bytes : @parameter%executeSubs : @storage
            FAILWITH;   # FAILED
          }; # bytes : @parameter%executeSubs : @storage
        # sp.verify((~ self.data.reqTokenAddress.is_some()) | (self.data.reqTokenAddress.is_some() & (self.data.reqTokenAddress.open_some() == params.tokenAddress))) # bytes : @parameter%executeSubs : @storage
        DIG 2;      # @storage : bytes : @parameter%executeSubs
        DUP;        # @storage : @storage : bytes : @parameter%executeSubs
        DUG 3;      # @storage : bytes : @parameter%executeSubs : @storage
        CDDAR;      # option address : bytes : @parameter%executeSubs : @storage
        IF_SOME
          {
            DROP;       # bytes : @parameter%executeSubs : @storage
            DIG 2;      # @storage : bytes : @parameter%executeSubs
            DUP;        # @storage : @storage : bytes : @parameter%executeSubs
            DUG 3;      # @storage : bytes : @parameter%executeSubs : @storage
            CDDAR;      # option address : bytes : @parameter%executeSubs : @storage
            IF_SOME
              {
                DROP;       # bytes : @parameter%executeSubs : @storage
                SWAP;       # @parameter%executeSubs : bytes : @storage
                DUP;        # @parameter%executeSubs : @parameter%executeSubs : bytes : @storage
                DUG 2;      # @parameter%executeSubs : bytes : @parameter%executeSubs : @storage
                CDDAR;      # address : bytes : @parameter%executeSubs : @storage
                DIG 3;      # @storage : address : bytes : @parameter%executeSubs
                DUP;        # @storage : @storage : address : bytes : @parameter%executeSubs
                DUG 4;      # @storage : address : bytes : @parameter%executeSubs : @storage
                CDDAR;      # option address : address : bytes : @parameter%executeSubs : @storage
                IF_SOME
                  {}
                  {
                    PUSH int 155; # int : address : bytes : @parameter%executeSubs : @storage
                    FAILWITH;   # FAILED
                  }; # @some : address : bytes : @parameter%executeSubs : @storage
                COMPARE;    # int : bytes : @parameter%executeSubs : @storage
                EQ;         # bool : bytes : @parameter%executeSubs : @storage
              }
              {
                PUSH bool False; # bool : bytes : @parameter%executeSubs : @storage
              }; # bool : bytes : @parameter%executeSubs : @storage
          }
          {
            PUSH bool True; # bool : bytes : @parameter%executeSubs : @storage
          }; # bool : bytes : @parameter%executeSubs : @storage
        IF
          {}
          {
            PUSH string "WrongCondition: (~ self.data.reqTokenAddress.is_some()) | (self.data.reqTokenAddress.is_some() & (self.data.reqTokenAddress.open_some() == params.tokenAddress))"; # string : bytes : @parameter%executeSubs : @storage
            FAILWITH;   # FAILED
          }; # bytes : @parameter%executeSubs : @storage
        # sp.verify((~ self.data.reqTokenAmount.is_some()) | (self.data.reqTokenAmount.is_some() & (self.data.reqTokenAmount.open_some() == params.tokenAmount))) # bytes : @parameter%executeSubs : @storage
        DIG 2;      # @storage : bytes : @parameter%executeSubs
        DUP;        # @storage : @storage : bytes : @parameter%executeSubs
        DUG 3;      # @storage : bytes : @parameter%executeSubs : @storage
        CDDDAR;     # option nat : bytes : @parameter%executeSubs : @storage
        IF_SOME
          {
            DROP;       # bytes : @parameter%executeSubs : @storage
            DIG 2;      # @storage : bytes : @parameter%executeSubs
            DUP;        # @storage : @storage : bytes : @parameter%executeSubs
            DUG 3;      # @storage : bytes : @parameter%executeSubs : @storage
            CDDDAR;     # option nat : bytes : @parameter%executeSubs : @storage
            IF_SOME
              {
                DROP;       # bytes : @parameter%executeSubs : @storage
                SWAP;       # @parameter%executeSubs : bytes : @storage
                DUP;        # @parameter%executeSubs : @parameter%executeSubs : bytes : @storage
                DUG 2;      # @parameter%executeSubs : bytes : @parameter%executeSubs : @storage
                CDDDAR;     # nat : bytes : @parameter%executeSubs : @storage
                DIG 3;      # @storage : nat : bytes : @parameter%executeSubs
                DUP;        # @storage : @storage : nat : bytes : @parameter%executeSubs
                DUG 4;      # @storage : nat : bytes : @parameter%executeSubs : @storage
                CDDDAR;     # option nat : nat : bytes : @parameter%executeSubs : @storage
                IF_SOME
                  {}
                  {
                    PUSH int 156; # int : nat : bytes : @parameter%executeSubs : @storage
                    FAILWITH;   # FAILED
                  }; # @some : nat : bytes : @parameter%executeSubs : @storage
                COMPARE;    # int : bytes : @parameter%executeSubs : @storage
                EQ;         # bool : bytes : @parameter%executeSubs : @storage
              }
              {
                PUSH bool False; # bool : bytes : @parameter%executeSubs : @storage
              }; # bool : bytes : @parameter%executeSubs : @storage
          }
          {
            PUSH bool True; # bool : bytes : @parameter%executeSubs : @storage
          }; # bool : bytes : @parameter%executeSubs : @storage
        IF
          {}
          {
            PUSH string "WrongCondition: (~ self.data.reqTokenAmount.is_some()) | (self.data.reqTokenAmount.is_some() & (self.data.reqTokenAmount.open_some() == params.tokenAmount))"; # string : bytes : @parameter%executeSubs : @storage
            FAILWITH;   # FAILED
          }; # bytes : @parameter%executeSubs : @storage
        # sp.verify((~ self.data.reqPeriodSeconds.is_some()) | (self.data.reqPeriodSeconds.is_some() & (self.data.reqPeriodSeconds.open_some() == params.periodSeconds))) # bytes : @parameter%executeSubs : @storage
        DIG 2;      # @storage : bytes : @parameter%executeSubs
        DUP;        # @storage : @storage : bytes : @parameter%executeSubs
        DUG 3;      # @storage : bytes : @parameter%executeSubs : @storage
        CDAAR;      # option int : bytes : @parameter%executeSubs : @storage
        IF_SOME
          {
            DROP;       # bytes : @parameter%executeSubs : @storage
            DIG 2;      # @storage : bytes : @parameter%executeSubs
            DUP;        # @storage : @storage : bytes : @parameter%executeSubs
            DUG 3;      # @storage : bytes : @parameter%executeSubs : @storage
            CDAAR;      # option int : bytes : @parameter%executeSubs : @storage
            IF_SOME
              {
                DROP;       # bytes : @parameter%executeSubs : @storage
                SWAP;       # @parameter%executeSubs : bytes : @storage
                DUP;        # @parameter%executeSubs : @parameter%executeSubs : bytes : @storage
                DUG 2;      # @parameter%executeSubs : bytes : @parameter%executeSubs : @storage
                CDDDDAR;    # int : bytes : @parameter%executeSubs : @storage
                DIG 3;      # @storage : int : bytes : @parameter%executeSubs
                DUP;        # @storage : @storage : int : bytes : @parameter%executeSubs
                DUG 4;      # @storage : int : bytes : @parameter%executeSubs : @storage
                CDAAR;      # option int : int : bytes : @parameter%executeSubs : @storage
                IF_SOME
                  {}
                  {
                    PUSH int 157; # int : int : bytes : @parameter%executeSubs : @storage
                    FAILWITH;   # FAILED
                  }; # @some : int : bytes : @parameter%executeSubs : @storage
                COMPARE;    # int : bytes : @parameter%executeSubs : @storage
                EQ;         # bool : bytes : @parameter%executeSubs : @storage
              }
              {
                PUSH bool False; # bool : bytes : @parameter%executeSubs : @storage
              }; # bool : bytes : @parameter%executeSubs : @storage
          }
          {
            PUSH bool True; # bool : bytes : @parameter%executeSubs : @storage
          }; # bool : bytes : @parameter%executeSubs : @storage
        IF
          {}
          {
            PUSH string "WrongCondition: (~ self.data.reqPeriodSeconds.is_some()) | (self.data.reqPeriodSeconds.is_some() & (self.data.reqPeriodSeconds.open_some() == params.periodSeconds))"; # string : bytes : @parameter%executeSubs : @storage
            FAILWITH;   # FAILED
          }; # bytes : @parameter%executeSubs : @storage
        # sp.verify((~ self.data.reqGasPrice.is_some()) | (self.data.reqGasPrice.is_some() & (self.data.reqGasPrice.open_some() == params.gasPrice))) # bytes : @parameter%executeSubs : @storage
        DIG 2;      # @storage : bytes : @parameter%executeSubs
        DUP;        # @storage : @storage : bytes : @parameter%executeSubs
        DUG 3;      # @storage : bytes : @parameter%executeSubs : @storage
        CADDDR;     # option nat : bytes : @parameter%executeSubs : @storage
        IF_SOME
          {
            DROP;       # bytes : @parameter%executeSubs : @storage
            DIG 2;      # @storage : bytes : @parameter%executeSubs
            DUP;        # @storage : @storage : bytes : @parameter%executeSubs
            DUG 3;      # @storage : bytes : @parameter%executeSubs : @storage
            CADDDR;     # option nat : bytes : @parameter%executeSubs : @storage
            IF_SOME
              {
                DROP;       # bytes : @parameter%executeSubs : @storage
                SWAP;       # @parameter%executeSubs : bytes : @storage
                DUP;        # @parameter%executeSubs : @parameter%executeSubs : bytes : @storage
                DUG 2;      # @parameter%executeSubs : bytes : @parameter%executeSubs : @storage
                CDDDDDAR;   # nat : bytes : @parameter%executeSubs : @storage
                DIG 3;      # @storage : nat : bytes : @parameter%executeSubs
                DUP;        # @storage : @storage : nat : bytes : @parameter%executeSubs
                DUG 4;      # @storage : nat : bytes : @parameter%executeSubs : @storage
                CADDDR;     # option nat : nat : bytes : @parameter%executeSubs : @storage
                IF_SOME
                  {}
                  {
                    PUSH int 158; # int : nat : bytes : @parameter%executeSubs : @storage
                    FAILWITH;   # FAILED
                  }; # @some : nat : bytes : @parameter%executeSubs : @storage
                COMPARE;    # int : bytes : @parameter%executeSubs : @storage
                EQ;         # bool : bytes : @parameter%executeSubs : @storage
              }
              {
                PUSH bool False; # bool : bytes : @parameter%executeSubs : @storage
              }; # bool : bytes : @parameter%executeSubs : @storage
          }
          {
            PUSH bool True; # bool : bytes : @parameter%executeSubs : @storage
          }; # bool : bytes : @parameter%executeSubs : @storage
        IF
          {}
          {
            PUSH string "WrongCondition: (~ self.data.reqGasPrice.is_some()) | (self.data.reqGasPrice.is_some() & (self.data.reqGasPrice.open_some() == params.gasPrice))"; # string : bytes : @parameter%executeSubs : @storage
            FAILWITH;   # FAILED
          }; # bytes : @parameter%executeSubs : @storage
        SWAP;       # @parameter%executeSubs : bytes : @storage
        # element = sp.local("element", sp.pack(sp.record(a = params.subscriber, b = params.publisher, c = params.tokenAddress, d = params.tokenAmount, e = params.periodSeconds, f = params.gasPrice, g = params.nonce))) # @parameter%executeSubs : bytes : @storage
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : bytes : @storage
        CDDDDDDAR;  # nat : @parameter%executeSubs : bytes : @storage
        SWAP;       # @parameter%executeSubs : nat : bytes : @storage
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : nat : bytes : @storage
        DUG 3;      # @parameter%executeSubs : nat : bytes : @parameter%executeSubs : @storage
        CDDDDDAR;   # nat : nat : bytes : @parameter%executeSubs : @storage
        PAIR %f %g; # pair (nat %f) (nat %g) : bytes : @parameter%executeSubs : @storage
        DIG 2;      # @parameter%executeSubs : pair (nat %f) (nat %g) : bytes : @storage
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : pair (nat %f) (nat %g) : bytes : @storage
        CDDDDAR;    # int : @parameter%executeSubs : pair (nat %f) (nat %g) : bytes : @storage
        SWAP;       # @parameter%executeSubs : int : pair (nat %f) (nat %g) : bytes : @storage
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : int : pair (nat %f) (nat %g) : bytes : @storage
        DUG 4;      # @parameter%executeSubs : int : pair (nat %f) (nat %g) : bytes : @parameter%executeSubs : @storage
        CDDDAR;     # nat : int : pair (nat %f) (nat %g) : bytes : @parameter%executeSubs : @storage
        PAIR %d %e; # pair (nat %d) (int %e) : pair (nat %f) (nat %g) : bytes : @parameter%executeSubs : @storage
        PAIR;       # pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : bytes : @parameter%executeSubs : @storage
        DIG 2;      # @parameter%executeSubs : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : bytes : @storage
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : bytes : @storage
        CDDAR;      # address : @parameter%executeSubs : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : bytes : @storage
        SWAP;       # @parameter%executeSubs : address : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : bytes : @storage
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : address : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : bytes : @storage
        DUG 4;      # @parameter%executeSubs : address : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : bytes : @parameter%executeSubs : @storage
        CDAR;       # address : address : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : bytes : @parameter%executeSubs : @storage
        PAIR %b %c; # pair (address %b) (address %c) : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : bytes : @parameter%executeSubs : @storage
        DIG 3;      # @parameter%executeSubs : pair (address %b) (address %c) : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : bytes : @storage
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : pair (address %b) (address %c) : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : bytes : @storage
        DUG 4;      # @parameter%executeSubs : pair (address %b) (address %c) : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : bytes : @parameter%executeSubs : @storage
        CAR;        # address : pair (address %b) (address %c) : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : bytes : @parameter%executeSubs : @storage
        PAIR %a;    # pair (address %a) (pair (address %b) (address %c)) : pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g)) : bytes : @parameter%executeSubs : @storage
        PAIR;       # pair (pair (address %a) (pair (address %b) (address %c))) (pair (pair (nat %d) (int %e)) (pair (nat %f) (nat %g))) : bytes : @parameter%executeSubs : @storage
        PACK;       # bytes : bytes : @parameter%executeSubs : @storage
        # if ~ (self.data.times.contains(element.value)): # bytes : bytes : @parameter%executeSubs : @storage
        DIG 3;      # @storage : bytes : bytes : @parameter%executeSubs
        DUP;        # @storage : @storage : bytes : bytes : @parameter%executeSubs
        DUG 4;      # @storage : bytes : bytes : @parameter%executeSubs : @storage
        CDDDDR;     # big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : bytes : bytes : @parameter%executeSubs : @storage
        SWAP;       # bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : bytes : @parameter%executeSubs : @storage
        DUP;        # bytes : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : bytes : @parameter%executeSubs : @storage
        DUG 2;      # bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : bytes : bytes : @parameter%executeSubs : @storage
        MEM;        # bool : bytes : bytes : @parameter%executeSubs : @storage
        IF
          {}
          {
            # self.data.times[element.value] = sp.record(active = False, nextValidTimeStamp = sp.timestamp(-1), ready = False) # bytes : bytes : @parameter%executeSubs : @storage
            DIG 3;      # @storage : bytes : bytes : @parameter%executeSubs
            DUP;        # @storage : @storage : bytes : bytes : @parameter%executeSubs
            CAR;        # pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : @storage : bytes : bytes : @parameter%executeSubs
            SWAP;       # @storage : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            CDR;        # pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            DUP;        # pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))))) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            CAR;        # pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            SWAP;       # pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            CDR;        # pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            DUP;        # pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))))) : pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            CAR;        # option address : pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            SWAP;       # pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            CDR;        # pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            DUP;        # pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))) : pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            CAR;        # option nat : pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            SWAP;       # pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            CDR;        # big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            DIG 5;      # bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : @parameter%executeSubs
            DUP;        # bytes : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : @parameter%executeSubs
            DUG 6;      # bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            PUSH (option (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))) (Some (Pair False (Pair "-1" False))); # option (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            SWAP;       # bytes : option (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            UPDATE;     # big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            SWAP;       # option nat : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            PAIR;       # pair (option nat) (big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            SWAP;       # option address : pair (option nat) (big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            PAIR;       # pair (option address) (pair (option nat) (big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            SWAP;       # pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (option address) (pair (option nat) (big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            PAIR;       # pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            SWAP;       # pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))))) : bytes : bytes : @parameter%executeSubs
            PAIR;       # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))))))) : bytes : bytes : @parameter%executeSubs
            DUG 3;      # bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))))))
          }; # bytes : bytes : @parameter%executeSubs : @storage
        # self.data.times[element.value].ready = False # bytes : bytes : @parameter%executeSubs : @storage
        DIG 3;      # @storage : bytes : bytes : @parameter%executeSubs
        DUP;        # @storage : @storage : bytes : bytes : @parameter%executeSubs
        CAR;        # pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : @storage : bytes : bytes : @parameter%executeSubs
        SWAP;       # @storage : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CDR;        # pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DUP;        # pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))))) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CAR;        # pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CDR;        # pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DUP;        # pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))))) : pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CAR;        # option address : pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # pair (option %reqTokenAddress address) (pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CDR;        # pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DUP;        # pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))) : pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CAR;        # option nat : pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # pair (option %reqTokenAmount nat) (big_map %times bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready)))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CDR;        # big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DUP;        # big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DIG 6;      # bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : @parameter%executeSubs
        DUP;        # bytes : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : @parameter%executeSubs
        DUG 7;      # bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DUP;        # bytes : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DUG 2;      # bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        GET;        # option (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        IF_SOME
          {}
          {
            PUSH int 187; # int : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            FAILWITH;   # FAILED
          }; # @some : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DUP;        # @some : @some : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CAR;        # bool : @some : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # @some : bool : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CDAR;       # timestamp : bool : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        PUSH bool False; # bool : timestamp : bool : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # timestamp : bool : bool : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        PAIR;       # pair timestamp bool : bool : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # bool : pair timestamp bool : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        PAIR;       # pair bool (pair timestamp bool) : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SOME;       # option (pair bool (pair timestamp bool)) : bytes : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # bytes : option (pair bool (pair timestamp bool)) : big_map bytes (pair (bool %active) (pair (timestamp %nextValidTimeStamp) (bool %ready))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        UPDATE;     # big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # option nat : big_map bytes (pair bool (pair timestamp bool)) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        PAIR;       # pair (option nat) (big_map bytes (pair bool (pair timestamp bool))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # option address : pair (option nat) (big_map bytes (pair bool (pair timestamp bool))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        PAIR;       # pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        PAIR;       # pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
        PAIR;       # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs
        DUG 3;      # bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        # sp.verify(sp.check_signature(params.subs_pub_key, params.userSignature, element.value)) # bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUP;        # bytes : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DIG 3;      # @parameter%executeSubs : bytes : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : bytes : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        CDDDDDDDAR; # signature : @parameter%executeSubs : bytes : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        SWAP;       # @parameter%executeSubs : signature : bytes : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : signature : bytes : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUG 5;      # @parameter%executeSubs : signature : bytes : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        CDDDDDDDDR; # key : signature : bytes : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        CHECK_SIGNATURE; # bool : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        IF
          {}
          {
            PUSH string "WrongCondition: sp.check_signature(params.subs_pub_key, params.userSignature, element.value)"; # string : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            FAILWITH;   # FAILED
          }; # bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        # sp.verify(params.subscriber != params.publisher) # bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DIG 2;      # @parameter%executeSubs : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        CDAR;       # address : @parameter%executeSubs : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        SWAP;       # @parameter%executeSubs : address : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : address : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUG 4;      # @parameter%executeSubs : address : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        CAR;        # address : address : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        COMPARE;    # int : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        NEQ;        # bool : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        IF
          {}
          {
            PUSH string "WrongCondition: params.subscriber != params.publisher"; # string : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            FAILWITH;   # FAILED
          }; # bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        # sp.verify(sp.now >= self.data.times[element.value].nextValidTimeStamp) # bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DIG 3;      # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs
        DUP;        # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs
        DUG 4;      # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        CDDDDR;     # big_map bytes (pair bool (pair timestamp bool)) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        SWAP;       # bytes : big_map bytes (pair bool (pair timestamp bool)) : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUP;        # bytes : bytes : big_map bytes (pair bool (pair timestamp bool)) : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUG 2;      # bytes : big_map bytes (pair bool (pair timestamp bool)) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        GET;        # option (pair bool (pair timestamp bool)) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        IF_SOME
          {
            # of_some: Get-item:190 # @some : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
          }
          {
            PUSH int 190; # int : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            FAILWITH;   # FAILED
          }; # @some : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        CDAR;       # timestamp : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        NOW;        # timestamp : timestamp : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        COMPARE;    # int : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        GE;         # bool : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        IF
          {}
          {
            PUSH string "WrongCondition: sp.now >= self.data.times[element.value].nextValidTimeStamp"; # string : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            FAILWITH;   # FAILED
          }; # bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        # self.data.times[element.value].ready = True # bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DIG 3;      # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs
        DUP;        # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs
        CAR;        # pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CDR;        # pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DUP;        # pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CAR;        # pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CDR;        # pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DUP;        # pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))) : pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CAR;        # option address : pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CDR;        # pair (option nat) (big_map bytes (pair bool (pair timestamp bool))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DUP;        # pair (option nat) (big_map bytes (pair bool (pair timestamp bool))) : pair (option nat) (big_map bytes (pair bool (pair timestamp bool))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CAR;        # option nat : pair (option nat) (big_map bytes (pair bool (pair timestamp bool))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # pair (option nat) (big_map bytes (pair bool (pair timestamp bool))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CDR;        # big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DUP;        # big_map bytes (pair bool (pair timestamp bool)) : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DIG 6;      # bytes : big_map bytes (pair bool (pair timestamp bool)) : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : @parameter%executeSubs
        DUP;        # bytes : bytes : big_map bytes (pair bool (pair timestamp bool)) : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : @parameter%executeSubs
        DUG 7;      # bytes : big_map bytes (pair bool (pair timestamp bool)) : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DUP;        # bytes : bytes : big_map bytes (pair bool (pair timestamp bool)) : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DUG 2;      # bytes : big_map bytes (pair bool (pair timestamp bool)) : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        GET;        # option (pair bool (pair timestamp bool)) : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        IF_SOME
          {}
          {
            PUSH int 191; # int : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            FAILWITH;   # FAILED
          }; # @some : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DUP;        # @some : @some : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CAR;        # bool : @some : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # @some : bool : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CDAR;       # timestamp : bool : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        PUSH bool True; # bool : timestamp : bool : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # timestamp : bool : bool : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        PAIR;       # pair timestamp bool : bool : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # bool : pair timestamp bool : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        PAIR;       # pair bool (pair timestamp bool) : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SOME;       # option (pair bool (pair timestamp bool)) : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # bytes : option (pair bool (pair timestamp bool)) : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        UPDATE;     # big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # option nat : big_map bytes (pair bool (pair timestamp bool)) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        PAIR;       # pair (option nat) (big_map bytes (pair bool (pair timestamp bool))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # option address : pair (option nat) (big_map bytes (pair bool (pair timestamp bool))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        PAIR;       # pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        PAIR;       # pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
        PAIR;       # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs
        DUG 3;      # bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        # sp.verify(self.data.times[elements.value].ready == True) # bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        PUSH bool True; # bool : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DIG 4;      # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bool : bytes : bytes : @parameter%executeSubs
        DUP;        # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bool : bytes : bytes : @parameter%executeSubs
        DUG 5;      # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bool : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        CDDDDR;     # big_map bytes (pair bool (pair timestamp bool)) : bool : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DIG 3;      # bytes : big_map bytes (pair bool (pair timestamp bool)) : bool : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUP;        # bytes : bytes : big_map bytes (pair bool (pair timestamp bool)) : bool : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUG 4;      # bytes : big_map bytes (pair bool (pair timestamp bool)) : bool : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        GET;        # option (pair bool (pair timestamp bool)) : bool : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        IF_SOME
          {
            # of_some: Get-item:218 # @some : bool : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
          }
          {
            PUSH int 218; # int : bool : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            FAILWITH;   # FAILED
          }; # @some : bool : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        CDDR;       # bool : bool : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        COMPARE;    # int : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        EQ;         # bool : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        IF
          {}
          {
            PUSH string "WrongCondition: self.data.times[elements.value].ready == True"; # string : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            FAILWITH;   # FAILED
          }; # bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        # self.data.times[elements.value].nextValidTimeStamp = sp.add_seconds(sp.now, params.periodSeconds) # bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DIG 3;      # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs
        DUP;        # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs
        CAR;        # pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CDR;        # pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DUP;        # pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CAR;        # pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CDR;        # pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DUP;        # pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))) : pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CAR;        # option address : pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CDR;        # pair (option nat) (big_map bytes (pair bool (pair timestamp bool))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DUP;        # pair (option nat) (big_map bytes (pair bool (pair timestamp bool))) : pair (option nat) (big_map bytes (pair bool (pair timestamp bool))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CAR;        # option nat : pair (option nat) (big_map bytes (pair bool (pair timestamp bool))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # pair (option nat) (big_map bytes (pair bool (pair timestamp bool))) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CDR;        # big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DUP;        # big_map bytes (pair bool (pair timestamp bool)) : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DIG 7;      # bytes : big_map bytes (pair bool (pair timestamp bool)) : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : @parameter%executeSubs
        DUP;        # bytes : bytes : big_map bytes (pair bool (pair timestamp bool)) : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : @parameter%executeSubs
        DUG 8;      # bytes : big_map bytes (pair bool (pair timestamp bool)) : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DUP;        # bytes : bytes : big_map bytes (pair bool (pair timestamp bool)) : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DUG 2;      # bytes : big_map bytes (pair bool (pair timestamp bool)) : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        GET;        # option (pair bool (pair timestamp bool)) : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        IF_SOME
          {}
          {
            PUSH int 219; # int : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
            FAILWITH;   # FAILED
          }; # @some : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DUP;        # @some : @some : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CAR;        # bool : @some : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # @some : bool : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CDDR;       # bool : bool : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        NOW;        # timestamp : bool : bool : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        DIG 11;     # @parameter%executeSubs : timestamp : bool : bool : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : timestamp : bool : bool : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes
        DUG 12;     # @parameter%executeSubs : timestamp : bool : bool : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        CDDDDAR;    # int : timestamp : bool : bool : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        ADD;        # timestamp : bool : bool : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        PAIR;       # pair timestamp bool : bool : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # bool : pair timestamp bool : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        PAIR;       # pair bool (pair timestamp bool) : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SOME;       # option (pair bool (pair timestamp bool)) : bytes : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # bytes : option (pair bool (pair timestamp bool)) : big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        UPDATE;     # big_map bytes (pair bool (pair timestamp bool)) : option nat : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # option nat : big_map bytes (pair bool (pair timestamp bool)) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        PAIR;       # pair (option nat) (big_map bytes (pair bool (pair timestamp bool))) : option address : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # option address : pair (option nat) (big_map bytes (pair bool (pair timestamp bool))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        PAIR;       # pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))) : pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # pair (option %reqPeriodSeconds int) (option %reqToAddress address) : pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        PAIR;       # pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : bytes : bytes : @parameter%executeSubs
        SWAP;       # pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
        PAIR;       # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs
        # if ~ (self.data.extraNonce.contains(params.subscriber)): # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs
        DUP;        # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs
        DUG 4;      # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        CADAR;      # map address nat : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DIG 3;      # @parameter%executeSubs : map address nat : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : map address nat : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUG 4;      # @parameter%executeSubs : map address nat : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        CAR;        # address : map address nat : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        MEM;        # bool : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        IF
          {}
          {
            # self.data.extraNonce[params.subscriber] = sp.record(value = 0) # bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            DIG 3;      # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs
            DUP;        # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs
            CDR;        # pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs
            SWAP;       # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            CAR;        # pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            DUP;        # pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            CAR;        # pair (int %allowance) (int %balance) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            SWAP;       # pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            CDR;        # pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            DUP;        # pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)) : pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            CDR;        # pair (address %owner) (option %reqGasPrice nat) : pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            SWAP;       # pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)) : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            CAR;        # map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            DIG 6;      # @parameter%executeSubs : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes
            DUP;        # @parameter%executeSubs : @parameter%executeSubs : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes
            DUG 7;      # @parameter%executeSubs : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            CAR;        # address : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            PUSH (option nat) (Some 0); # option nat : address : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            SWAP;       # address : option nat : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            UPDATE;     # map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            PAIR;       # pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            SWAP;       # pair (int %allowance) (int %balance) : pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            PAIR;       # pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat))) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            PAIR;       # pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs
            DUG 3;      # bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
          }; # bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        # if params.nonce > self.data.extraNonce[params.subscriber].value: # bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DIG 3;      # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs
        DUP;        # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs
        DUG 4;      # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        CADAR;      # map address nat : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DIG 3;      # @parameter%executeSubs : map address nat : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : map address nat : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUG 4;      # @parameter%executeSubs : map address nat : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        CAR;        # address : map address nat : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        GET;        # option nat : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        IF_SOME
          {
            # of_some: Get-item:221 # @some : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
          }
          {
            PUSH int 221; # int : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            FAILWITH;   # FAILED
          }; # @some : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DIG 3;      # @parameter%executeSubs : @some : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : @some : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUG 4;      # @parameter%executeSubs : @some : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        CDDDDDDAR;  # nat : @some : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        COMPARE;    # int : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        GT;         # bool : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        IF
          {
            # self.data.extraNonce[params.subscriber].value = params.nonce # bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            DIG 3;      # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs
            DUP;        # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs
            DUG 4;      # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            DUP;        # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            CDR;        # pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            SWAP;       # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            CAR;        # pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            DUP;        # pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            CAR;        # pair (int %allowance) (int %balance) : pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            SWAP;       # pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat))) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            CDR;        # pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            DUP;        # pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)) : pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            CDR;        # pair (address %owner) (option %reqGasPrice nat) : pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            SWAP;       # pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)) : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            CAR;        # map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            DUP;        # map address nat : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            DIG 7;      # @parameter%executeSubs : map address nat : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            DUP;        # @parameter%executeSubs : @parameter%executeSubs : map address nat : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            DUG 8;      # @parameter%executeSubs : map address nat : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            CAR;        # address : map address nat : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            DUP;        # address : address : map address nat : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            DUG 2;      # address : map address nat : address : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            GET;        # option nat : address : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            IF_SOME
              {
                DROP;       # address : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
                DIG 8;      # pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : address : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
                DROP;       # address : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
              }
              {
                PUSH int 222; # int : address : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
                FAILWITH;   # FAILED
              }; # address : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            DIG 7;      # @parameter%executeSubs : address : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes
            DUP;        # @parameter%executeSubs : @parameter%executeSubs : address : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes
            DUG 8;      # @parameter%executeSubs : address : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            CDDDDDDAR;  # nat : address : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            SOME;       # option nat : address : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            SWAP;       # address : option nat : map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            UPDATE;     # map address nat : pair (address %owner) (option %reqGasPrice nat) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            PAIR;       # pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)) : pair (int %allowance) (int %balance) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            SWAP;       # pair (int %allowance) (int %balance) : pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            PAIR;       # pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat))) : pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))) : bytes : bytes : @parameter%executeSubs
            PAIR;       # pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))) : bytes : bytes : @parameter%executeSubs
            DUG 3;      # bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
          }
          {}; # bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        # sp.transfer(sp.record(from_ = params.subscriber, to_ = params.publisher, value = params.tokenAmount), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_", ("to_", "value"))), params.tokenAddress, entry_point='transfer').open_some()) # bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        NIL operation; # list operation : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DIG 3;      # @parameter%executeSubs : list operation : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : list operation : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUG 4;      # @parameter%executeSubs : list operation : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        CDDAR;      # address : list operation : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        CONTRACT %transfer (pair (address %from_) (pair (address %to_) (nat %value))); # option (contract (pair (address %from_) (pair (address %to_) (nat %value)))) : list operation : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        IF_SOME
          {}
          {
            PUSH int 224; # int : list operation : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            FAILWITH;   # FAILED
          }; # @some : list operation : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        PUSH mutez 0; # mutez : @some : list operation : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DIG 5;      # @parameter%executeSubs : mutez : @some : list operation : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : mutez : @some : list operation : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        CDDDAR;     # nat : @parameter%executeSubs : mutez : @some : list operation : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        SWAP;       # @parameter%executeSubs : nat : mutez : @some : list operation : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : nat : mutez : @some : list operation : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUG 7;      # @parameter%executeSubs : nat : mutez : @some : list operation : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        CDAR;       # address : nat : mutez : @some : list operation : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        PAIR %to_ %value; # pair (address %to_) (nat %value) : mutez : @some : list operation : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DIG 6;      # @parameter%executeSubs : pair (address %to_) (nat %value) : mutez : @some : list operation : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : pair (address %to_) (nat %value) : mutez : @some : list operation : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUG 7;      # @parameter%executeSubs : pair (address %to_) (nat %value) : mutez : @some : list operation : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        CAR;        # address : pair (address %to_) (nat %value) : mutez : @some : list operation : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        PAIR %from_; # pair (address %from_) (pair (address %to_) (nat %value)) : mutez : @some : list operation : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        TRANSFER_TOKENS; # operation : list operation : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        CONS;       # list operation : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        # if params.gasPrice > 0: # list operation : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        PUSH nat 0; # nat : list operation : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DIG 4;      # @parameter%executeSubs : nat : list operation : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUP;        # @parameter%executeSubs : @parameter%executeSubs : nat : list operation : bytes : bytes : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        DUG 5;      # @parameter%executeSubs : nat : list operation : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        CDDDDDAR;   # nat : nat : list operation : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        COMPARE;    # int : list operation : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        GT;         # bool : list operation : bytes : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
        IF
          {
            SWAP;       # bytes : list operation : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            DROP;       # list operation : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            SWAP;       # bytes : list operation : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            DROP;       # list operation : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            SWAP;       # @parameter%executeSubs : list operation : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            # sp.transfer(sp.record(from_ = params.subscriber, to_ = sp.sender, value = params.gasPrice), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_", ("to_", "value"))), params.tokenAddress, entry_point='transfer').open_some()) # @parameter%executeSubs : list operation : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            DUP;        # @parameter%executeSubs : @parameter%executeSubs : list operation : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            DUG 2;      # @parameter%executeSubs : list operation : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            CDDAR;      # address : list operation : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            CONTRACT %transfer (pair (address %from_) (pair (address %to_) (nat %value))); # option (contract (pair (address %from_) (pair (address %to_) (nat %value)))) : list operation : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            IF_SOME
              {}
              {
                PUSH int 229; # int : list operation : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
                FAILWITH;   # FAILED
              }; # @some : list operation : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            PUSH mutez 0; # mutez : @some : list operation : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            DIG 3;      # @parameter%executeSubs : mutez : @some : list operation : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            DUP;        # @parameter%executeSubs : @parameter%executeSubs : mutez : @some : list operation : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            DUG 4;      # @parameter%executeSubs : mutez : @some : list operation : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            CDDDDDAR;   # nat : mutez : @some : list operation : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            SENDER;     # address : nat : mutez : @some : list operation : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            PAIR %to_ %value; # pair (address %to_) (nat %value) : mutez : @some : list operation : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            DIG 4;      # @parameter%executeSubs : pair (address %to_) (nat %value) : mutez : @some : list operation : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            CAR;        # address : pair (address %to_) (nat %value) : mutez : @some : list operation : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            PAIR %from_; # pair (address %from_) (pair (address %to_) (nat %value)) : mutez : @some : list operation : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            CONS;       # list operation : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
          }
          {
            SWAP;       # bytes : list operation : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            DROP;       # list operation : bytes : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            SWAP;       # bytes : list operation : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            DROP;       # list operation : @parameter%executeSubs : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            SWAP;       # @parameter%executeSubs : list operation : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
            DROP;       # list operation : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
          }; # list operation : pair (pair (pair (int %allowance) (int %balance)) (pair (map address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
      }; # list operation : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
    NIL operation; # list operation : list operation : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
    SWAP;       # list operation : list operation : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
    ITER
      {
        CONS;       # list operation : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
      }; # list operation : pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool))))))
    PAIR;       # pair (list operation) (pair (pair (pair (int %allowance) (int %balance)) (pair (map %extraNonce address nat) (pair (address %owner) (option %reqGasPrice nat)))) (pair (pair (option %reqPeriodSeconds int) (option %reqToAddress address)) (pair (option address) (pair (option nat) (big_map bytes (pair bool (pair timestamp bool)))))))
  };
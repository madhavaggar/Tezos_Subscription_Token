Storage: sp.TRecord(allowance = sp.TIntOrNat, balance = sp.TIntOrNat, extraNonce = sp.TMap(sp.TAddress, sp.TRecord(value = sp.TNat).layout("value")), owner = sp.TAddress, reqGasPrice = sp.TOption(sp.TNat), reqPeriodSeconds = sp.TOption(sp.TInt), reqToAddress = sp.TOption(sp.TAddress), reqTokenAddress = sp.TOption(sp.TAddress), reqTokenAmount = sp.TOption(sp.TNat), times = sp.TBigMap(sp.TBytes, sp.TRecord(active = sp.TBool, nextValidTimeStamp = sp.TTimestamp, ready = sp.TBool).layout(("active", ("nextValidTimeStamp", "ready"))))).layout(((("allowance", "balance"), ("extraNonce", ("owner", "reqGasPrice"))), (("reqPeriodSeconds", "reqToAddress"), ("reqTokenAddress", ("reqTokenAmount", "times")))))
Params: sp.TVariant(cancelSub = sp.TRecord(gasPrice = sp.TNat, nonce = sp.TNat, periodSeconds = sp.TInt, publisher = sp.TAddress, subs_pub_key = sp.TKey, subscriber = sp.TAddress, tokenAddress = sp.TAddress, tokenAmount = sp.TNat, userSignature = sp.TSignature).layout(("subscriber", ("publisher", ("tokenAddress", ("tokenAmount", ("periodSeconds", ("gasPrice", ("nonce", ("userSignature", "subs_pub_key"))))))))), executeSubs = sp.TRecord(gasPrice = sp.TNat, nonce = sp.TNat, periodSeconds = sp.TInt, publisher = sp.TAddress, subs_pub_key = sp.TKey, subscriber = sp.TAddress, tokenAddress = sp.TAddress, tokenAmount = sp.TNat, userSignature = sp.TSignature).layout(("subscriber", ("publisher", ("tokenAddress", ("tokenAmount", ("periodSeconds", ("gasPrice", ("nonce", ("userSignature", "subs_pub_key")))))))))).layout(("cancelSub", "executeSubs"))